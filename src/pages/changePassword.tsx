import React from 'react'
import { Box, Card, CardMedia, Stack, TextField, Typography } from '@mui/material'
import Button from '@mui/material/Button'
import axios from 'axios'
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { useRouter } from 'next/router'

import { Layout } from '@/src/main/layout'
import { useAppSelector } from '@/src/main/store/store'
import { getRandomImage } from '@/src/pages/login'
import { API_HOST } from '@/src/shared/lib/constants/constants'
import { getTypeDevice } from '@/src/shared/lib/helpers'
import { TDeviceProp } from '@/src/shared/lib/types/entities'

export async function getServerSideProps(context: any): Promise<{ props: TDeviceProp }> {
	const device = getTypeDevice(context)

	return {
		props: {
			device,
		},
	}
}

const ChangePassword: React.FC<TDeviceProp> = ({ device }) => {
	const [password1, setPassword1] = React.useState<string>('')

	const [password2, setPassword2] = React.useState<string>('')

	const [isChange, setIsChange] = React.useState(false)

	const { query, push } = useRouter()

	const changePassword = async () => {
		let formData: any = new FormData()

		formData.append('password_1', password1)
		formData.append('password_2', password2)

		if (password1.trim() && password2.trim()) {
			try {
				await axios.post(API_HOST + `/auth/change-pass?token=${query.token}`, formData, {
					headers: {
						'content-type': 'multipart/form-data ',
					},
				})
				setIsChange(true)
				setTimeout(() => push('/login'), 5000)
			} catch (err) {}
		}
	}

	const desktop = device === 'desktop'

	const refImage = React.useRef(getRandomImage())

	const theme = useAppSelector((state) => state.theme.theme)

	return (
		<Layout titlePage={'Авторизация'} isAuthPage={true}>
			<Head>
				<title>Восстановление аккаунта</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/logo.svg' />
			</Head>
			<Stack
				direction={desktop ? 'row' : 'column'}
				alignItems='center'
				justifyContent={desktop ? 'space-between' : 'center'}
				sx={{
					padding: 0,
					margin: desktop ? 0 : '60px auto',
					backgroundColor: theme === 'light' ? 'white' : '#373737',
				}}
			>
				<Link
					style={{
						position: 'absolute',
						top: 45,
						right: '7%',
						cursor: 'pointer',
						fontSize: 17,
					}}
					href={'/'}
				>
					<Image src={'/x-mark.svg'} width={18} height={18} alt={''} />
				</Link>
				{desktop && (
					<Card>
						<CardMedia sx={{ height: '100vh', width: '600px' }} image={`/login_images/${refImage.current}`}>
							<Stack
								direction='column-reverse'
								justifyContent='flex-start'
								alignItems='flex-start'
								spacing={2}
								sx={{
									wdith: '100%',
									height: '100%',
									paddingBottom: 3,
									paddingLeft: 3,
								}}
							>
								<Typography
									variant='body2'
									sx={{
										color: '#FFFFFF',
										lineHeight: '23.8px',
										fontSize: '17px',
										fontWeight: '400px',
									}}
								>
									Midjourney
								</Typography>
								<Typography
									variant='body2'
									sx={{
										color: '#FFFFFF',
										lineHeight: '28px',
										fontSize: '20px',
										fontWeight: '600px',
									}}
								>
									by honeynek
								</Typography>
							</Stack>
						</CardMedia>
					</Card>
				)}
				{isChange ? (
					<Box
						sx={{
							width: '40vh',
							height: '100%',
							marginRight: '25%',
							textAlign: 'center',
						}}
					>
						<Typography
							sx={{
								fontSize: 23,
								textAlign: 'center',
								marginBottom: 1,
							}}
						>
							Ваш пароль успешно изменён!
						</Typography>
						<Link style={{ color: '#7F7DF3', fontSize: 17 }} href={'/login'}>
							Войти в аккаунт
						</Link>
					</Box>
				) : (
					<Box sx={{ width: '40vh', height: '100%', margin: '0 auto' }}>
						<Typography
							sx={{
								color: theme === 'light' ? '#181C32' : '#E1E1E1',
								lineHeight: '36.4px',
								fontSize: '24px',
								textAlign: 'center',
								marginBottom: 2,
							}}
						>
							Восстановление пароля
						</Typography>
						<Typography
							variant='body2'
							sx={{
								color: theme === 'light' ? '#181C32' : '#A6A5A5',
								lineHeight: '19.6px',
								fontSize: '14px',
								fontWeight: '600',
								paddingTop: 0.2,
							}}
						>
							Новый пароль
						</Typography>
						<TextField
							fullWidth
							sx={{
								marginTop: 1.5,
								paddingTop: 0,
								paddingBottom: 0,
								'& label': { color: '#8853FA' },
								backgroundColor: theme === 'light' ? 'transparent' : '#3D3D3D',
								input: {
									color: theme === 'light' ? '#272727' : '#E1E1E1',
								},
							}}
							value={password1}
							onChange={(e) => setPassword1(e.target.value)}
						></TextField>
						<Typography
							variant='body2'
							sx={{
								color: theme === 'light' ? '#181C32' : '#A6A5A5',
								lineHeight: '19.6px',
								fontSize: '14px',
								fontWeight: '600',
								paddingTop: 0.2,
							}}
						>
							Подтверждение пароля
						</Typography>
						<TextField
							fullWidth
							sx={{
								marginTop: 1.5,
								paddingTop: 0,
								paddingBottom: 0,
								'& label': { color: '#8853FA' },
								backgroundColor: theme === 'light' ? 'transparent' : '#3D3D3D',
								input: {
									color: theme === 'light' ? '#272727' : '#E1E1E1',
								},
							}}
							value={password2}
							onChange={(e) => setPassword2(e.target.value)}
						></TextField>
						<Box>
							<Button
								variant='contained'
								style={{
									marginTop: '18px',
								}}
								sx={{
									backgroundColor: '#7F7DF3',
									color: '#FFFFFF',
									lineHeight: '20px',
									fontSize: '16px',
									fontWeight: '600px',
									borderRadius: '13px',
									textTransform: 'none',
									width: '100%',
									height: 48,
									'&:hover': {
										backgroundColor: '#8153FB',
										opacity: [0.9, 0.8, 0.7],
									},
								}}
								onClick={changePassword}
							>
								Сменить пароль
							</Button>
						</Box>
					</Box>
				)}
			</Stack>
		</Layout>
	)
}

export default ChangePassword
